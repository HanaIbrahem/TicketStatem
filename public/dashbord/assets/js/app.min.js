// Merge default and provided settings
var settings = Object.assign({}, userSettings);
var isSidebar = document.getElementsByClassName("customizer");
if (isSidebar.length > 0) {
  var AdminSettings = {
    // Settings INIT
    AdminSettingsInit: function () {
      AdminSettings.ManageSidebarType();
   
    },

   

    //****************************
    // Full / Minisidebar type
    //****************************
    ManageSidebarType: function () {
      switch (settings.SidebarType) {
        //****************************
        // If the sidebar type has full
        //****************************
        case "full":
          document.querySelector("#full-sidebar").checked = true;
          document.body.setAttribute("data-sidebartype", "full");
          //****************************
          /* This is for the mini-sidebar if width is less then 1170*/
          //****************************
          var setsidebartype = function () {
            var width =
              window.innerWidth > 0 ? window.innerWidth : this.screen.width;
            if (width < 1300) {
              document.body.setAttribute("data-sidebartype", "mini-sidebar");
            } else {
              document.body.setAttribute("data-sidebartype", "full");
            }
          };
          window.addEventListener("DOMContentLoaded", setsidebartype);
          window.addEventListener("resize", setsidebartype);
          break;

        //****************************
        // If the sidebar type has mini-sidebar
        //****************************
        case "mini-sidebar":
          document.querySelector("#mini-sidebar").checked = true;
          document.body.setAttribute("data-sidebartype", "mini-sidebar");
          break;

        default:
      }
    },

  };

  // Initialize settings
  AdminSettings.AdminSettingsInit();

  //****************************
  // Handle Click
  //****************************

  document.addEventListener("DOMContentLoaded", function () {
  

    //****************************
    // Theme sidebar
    //****************************
    function handleSidebarToggle() {
      function setSidebarType(sidebarType) {
        document.body.setAttribute("data-sidebartype", sidebarType);
      }

      document
        .getElementById("full-sidebar")
        .addEventListener("click", () => setSidebarType("full"));
      document
        .getElementById("mini-sidebar")
        .addEventListener("click", () => setSidebarType("mini-sidebar"));
    }
    handleSidebarToggle();
    //****************************
    // Toggle sidebar
    //****************************
    function handleSidebar() {
      document.querySelectorAll(".sidebartoggler").forEach(function (element) {
        element.addEventListener("click", function () {
          document.querySelectorAll(".sidebartoggler").forEach(function (el) {
            el.checked = true;
          });
          document
            .getElementById("main-wrapper")
            .classList.toggle("show-sidebar");
          document.querySelectorAll(".sidebarmenu").forEach(function (el) {
            el.classList.toggle("close");
          });
          var dataTheme = document.body.getAttribute("data-sidebartype");
          if (dataTheme === "full") {
            document.body.setAttribute("data-sidebartype", "mini-sidebar");
          } else {
            document.body.setAttribute("data-sidebartype", "full");
          }
        });
      });
    }

    handleSidebar();
  });
}

document.addEventListener("DOMContentLoaded", function () {
  // Function to set the theme
  function setTheme(theme) {
      document.documentElement.setAttribute('data-bs-theme', theme);
      $('body').attr('data-bs-theme', theme); // Also set the theme for body
      document.cookie = "theme=" + theme + "; path=/";
  }

  // Function to get the theme from cookies
  function getTheme() {
      const value = `; ${document.cookie}`;
      const parts = value.split(`; theme=`);
      if (parts.length === 2) return parts.pop().split(';').shift();
  }

  // Function to toggle between light and dark themes
  function toggleTheme() {
      const currentTheme = getTheme();
      const newTheme = (currentTheme === 'light') ? 'dark' : 'light';
      setTheme(newTheme);
      updateThemeIcon(newTheme);
  }

  // Function to update theme icon
  function updateThemeIcon(theme) {
      const themeIcon = $('#theme-icon');
      if (theme === 'light') {
          themeIcon.removeClass('fa-sun').addClass('fa-moon');
      } else {
          themeIcon.removeClass('fa-moon').addClass('fa-sun');
      }
  }

  // Set the initial theme based on the cookie
  const savedTheme = getTheme();
  if (savedTheme) {
      setTheme(savedTheme);
      updateThemeIcon(savedTheme); // Update the theme icon based on the saved theme
  } else {
      // If no theme is saved, set the initial theme based on the default class of the icon
      const defaultTheme = $('#theme-icon').hasClass('fa-moon') ? 'dark' : 'light';
      setTheme(defaultTheme);
      updateThemeIcon(defaultTheme);
  }

  // Event listener for theme toggle
  $('#theme-toggle').click(function () {
      toggleTheme();
  });
});
